var _defs, _g;
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import * as React from "react";
import { forwardRef } from "react";
const SvgBunny = (props, ref) => /*#__PURE__*/React.createElement("svg", _extends({
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  viewBox: "0 0 50 52",
  width: 50,
  height: 52,
  ref: ref
}, props), _defs || (_defs = /*#__PURE__*/React.createElement("defs", null, /*#__PURE__*/React.createElement("clipPath", {
  id: "c"
}, /*#__PURE__*/React.createElement("path", {
  d: "M0 0h50v52H0z"
})), /*#__PURE__*/React.createElement("clipPath", {
  id: "e"
}, /*#__PURE__*/React.createElement("path", {
  d: "M0 0h50v52H0z"
})), /*#__PURE__*/React.createElement("filter", {
  id: "a",
  filterUnits: "objectBoundingBox",
  x: "0%",
  y: "0%",
  width: "100%",
  height: "100%"
}, /*#__PURE__*/React.createElement("feComponentTransfer", {
  in: "SourceGraphic"
}, /*#__PURE__*/React.createElement("feFuncA", {
  type: "table",
  tableValues: "1.0 0.0"
}))), /*#__PURE__*/React.createElement("mask", {
  id: "d",
  "mask-type": "alpha"
}, /*#__PURE__*/React.createElement("g", {
  filter: "url(#a)"
}, /*#__PURE__*/React.createElement("use", {
  xlinkHref: "#b"
}))))), /*#__PURE__*/React.createElement("g", {
  clipPath: "url(#c)"
}, /*#__PURE__*/React.createElement("g", {
  className: "wallet-lottie_fill_link-color",
  style: {
    display: "block"
  }
}, _g || (_g = /*#__PURE__*/React.createElement("g", null, /*#__PURE__*/React.createElement("path", {
  fill: "#007AFF",
  d: "M26.066 39.998a5.166 5.166 0 0 1-1.64-.274c-.547-.182-1.168-.579-1.86-1.189l-5.618-4.703c-.119 0-.237.004-.356.013h-.343c-1.367 0-2.625-.141-3.773-.424a9.494 9.494 0 0 1-3.089-1.393c-.912-.638-1.704-1.486-2.379-2.543-.875.009-1.596-.214-2.161-.67C4.282 28.35 4 27.729 4 26.955c0-.702.245-1.267.737-1.696.502-.437 1.127-.647 1.875-.629.619-1.786 1.425-3.263 2.418-4.429.994-1.167 2.133-2.032 3.418-2.597 1.295-.574 2.694-.862 4.198-.862 1.148 0 2.219.132 3.213.396.993.255 1.95.611 2.871 1.067.929.446 1.873.961 2.83 1.545l3.077 1.86c.775.437 1.476.819 2.104 1.147.638.328 1.241.493 1.806.493.392 0 .728-.078 1.011-.233.291-.164.589-.382.89-.655l-7.739-4.922a45.448 45.448 0 0 1-1.791-1.203 13.363 13.363 0 0 1-1.559-1.314c-.42-.437-.629-.833-.629-1.188 0-.401.177-.767.533-1.095.355-.337.812-.629 1.368-.875a8.287 8.287 0 0 1 1.735-.573A8.198 8.198 0 0 1 28.034 11c1.249 0 2.49.323 3.72.97 1.231.647 2.337 1.665 3.321 3.05l3.418 4.825c1.149-.027 2.189.155 3.119.547a6.97 6.97 0 0 1 2.405 1.668 7.59 7.59 0 0 1 1.558 2.516 8.52 8.52 0 0 1 .547 3.062c0 1.212-.196 2.156-.588 2.83-.382.666-.96 1.136-1.735 1.409-.766.265-1.719.397-2.858.397a8.47 8.47 0 0 1-2.161-.261 9.264 9.264 0 0 1-1.845-.696 16.285 16.285 0 0 1-1.64-.957c-.592.282-1.135.56-1.627.834-.483.273-.943.541-1.381.806a10.29 10.29 0 0 0-1.175-.151 13.18 13.18 0 0 0-1.205-.054c-.501 0-1.001.023-1.502.069a13.53 13.53 0 0 0-1.423.205l-.929-2.148c-.984-2.269-2.279-3.96-3.883-5.072s-3.45-1.668-5.537-1.668a6.04 6.04 0 0 0-1.791.246c-.519.164-.78.489-.78.972 0 .301.095.524.287.67.191.146.442.218.752.218h1.655a7.53 7.53 0 0 1 3.048.616 7.739 7.739 0 0 1 2.543 1.791c.747.784 1.376 1.731 1.887 2.843l1.559 3.446c.41-.082.802-.164 1.176-.246.383-.091.815-.164 1.298-.219a13.837 13.837 0 0 1 1.778-.097c1.395 0 2.584.188 3.569.562.984.374 1.735.883 2.254 1.53.52.638.78 1.354.78 2.147 0 .738-.273 1.312-.82 1.722-.547.411-1.327.616-2.339.616a4.9 4.9 0 0 1-1.175-.123c-.328-.082-.683-.16-1.066-.233-.383-.073-.879-.109-1.49-.109-.893 0-1.614.077-2.161.232a5.534 5.534 0 0 1-1.531.233zm-10.431 1.108c-1.458 0-2.625-.278-3.5-.834-.866-.547-1.299-1.277-1.299-2.188 0-.611.218-1.099.655-1.463.447-.374 1.05-.56 1.806-.56.392 0 .775.017 1.149.054.373.027.715.06 1.025.096.319.037.587.054.806.054.136 0 .259-.003.369-.013l.315-.028 4.183 3.528a7.722 7.722 0 0 1-2.297.998c-.866.237-1.936.356-3.212.356zm24.5-14c.355 0 .655-.133.901-.397.256-.274.384-.588.384-.944 0-.346-.123-.641-.369-.888a1.23 1.23 0 0 0-.903-.37c-.347 0-.647.134-.903.398a1.302 1.302 0 0 0-.368.916c0 .346.122.646.368.901s.544.384.89.384z"
}))))));
const ForwardRef = /*#__PURE__*/forwardRef(SvgBunny);
export { ForwardRef as ReactComponent };