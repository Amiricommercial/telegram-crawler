var _rect, _path;
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import * as React from "react";
import { forwardRef } from "react";
const SvgCryptoEquivalent = (props, ref) => /*#__PURE__*/React.createElement("svg", _extends({
  width: 40,
  height: 40,
  viewBox: "0 0 40 40",
  fill: "none",
  xmlns: "http://www.w3.org/2000/svg",
  ref: ref
}, props), _rect || (_rect = /*#__PURE__*/React.createElement("rect", {
  width: 40,
  height: 40,
  rx: 20,
  fill: "var(--tertiary-fill-background)"
})), _path || (_path = /*#__PURE__*/React.createElement("path", {
  opacity: 0.64,
  d: "m20 28.62 6.927-11.638c.679-1.14 1.018-1.71.974-2.18a1.44 1.44 0 0 0-.583-1.024c-.38-.278-1.044-.278-2.37-.278H20m0 15.12-6.927-11.638c-.679-1.14-1.018-1.71-.973-2.18a1.44 1.44 0 0 1 .582-1.024c.38-.278 1.043-.278 2.37-.278H20m0 15.12V13.5",
  stroke: "currentColor",
  strokeWidth: 1.8,
  strokeLinejoin: "round"
})));
const ForwardRef = /*#__PURE__*/forwardRef(SvgCryptoEquivalent);
export { ForwardRef as ReactComponent };